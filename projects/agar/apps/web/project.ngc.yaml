from: HTML/pixi
platform: Docker/web

do:
  - PixiJS/Texture/create:
      args:
        img_url: >-
          "grid-small.png"
      return: texture
  - PixiJS/TilingSprite/create:
      args:
        texture: texture
      return: grid
  - PixiJS/Container/addChild:
      args:
        container: pixi_app.stage
        child: grid
  - PixiJS/TilingSprite/setSize:
      args:
        sprite: grid
        width: pixi_app.screen.width
        height: pixi_app.screen.height
  - PixiJS/TilingSprite/setTileScale:
      args:
        sprite: grid
        scale: 0.5
  - PixiJS/Renderer/setBackgroundColor:
      args:
        renderer: pixi_app.renderer
        color: 0xFFFFFF
  - PixiJS/Sprite/setTint:
      args:
        sprite: grid
        tint: 0x999999
  - PixiJS/Graphics/create:
      return: cell
  - var:
      name: idx
      value: 300
  - while:
      condition: idx > 0
      do:
        - Arithmetic/subtract:
            args:
              left: idx
              right: 1
            return: idx
        - Random/getRandomInt:
            args:
              max: 2
            return: radius
        - Random/getRandomInt:
            args:
              max: 0xFFFFFF
            return: cell_color
        - Random/getRandomInt:
            args:
              max: pixi_app.stage.width
            return: x
        - Random/getRandomInt:
            args:
              max: pixi_app.screen.height
            return: y
        - PixiJS/Graphics/beginFill:
            args:
              graphics: cell
              color: cell_color
        - PixiJS/Graphics/drawCircle:
            args:
              graphics: cell
              position: "{x: x, y: y}"
              radius: 6 + radius
        - PixiJS/Graphics/endFill:
            args:
              graphics: cell
  - PixiJS/Container/addChild:
      args:
        container: pixi_app.stage
        child: cell


